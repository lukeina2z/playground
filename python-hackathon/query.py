import asyncio
import os

from llama_index.core import VectorStoreIndex, SimpleDirectoryReader, Settings
from llama_index.core.agent.workflow import AgentWorkflow
from llama_index.llms.ollama import Ollama
from llama_index.embeddings.huggingface import HuggingFaceEmbedding
from llama_index.core import StorageContext, load_index_from_storage

Settings.llm = Ollama(
    # model="qwen3:30b-a3b",
    model = "qwen3:8b",
    # model="mistral:7b",
    request_timeout = 360.0,
    context_window = 20000,
    temperature = 0.0,
)

Settings.embed_model = HuggingFaceEmbedding(model_name="BAAI/bge-base-en-v1.5")

storage_context = StorageContext.from_defaults(persist_dir="data/index")
index = load_index_from_storage(
    storage_context,
    embed_model = Settings.embed_model,
)

query_engine = index.as_query_engine(
    llm = Settings.llm,
)

async def analyze_open_telemetry_span_collection_json(query: str) -> str:
    """Useful for analyzing open telemetry spans generated by AWS applications."""
    response = await query_engine.aquery(query)
    return str(response)

agent = AgentWorkflow.from_tools_or_functions(
    [analyze_open_telemetry_span_collection_json],
    llm = Settings.llm,
    system_prompt = """You are a helpful assistant that can perform search through open telemetry span json file to answer questions. 
    In the json file, each element of 'All spans' field is an open telemetry span. Span is uniquely identified by 'span_id'.
    Trace is uniquely identified by 'trace_id'. Normally a trace contains multiple spans. """,
)

async def main():
    response = await agent.run(
        "Check span json file, which span had the highest latency?"
    )
    print(str(response))
    print ("\n\n")

    # response = await agent.run(
    #     "Each element of 'All spans' is an open telemetry span. Please find the count of unique spans. Span is uniquely identified by 'span_id'. Display all of these IDs"
    # )
    # print(str(response))
    # print ("\n\n")

    # response = await agent.run(
    #     "Each element of 'All spans' is an open telemetry span. Please find the count of unique trace. Trace is uniquely identified by 'trace_id'. Normally" \
    #     "a trace contains multiple spans. Display all of these IDs"
    # )
    # print(str(response))
    # print ("\n\n")

    # response = await agent.run(
    #     "How many trace IDs you found from these spans?"
    # )    
    # print(str(response))
    # print ("\n\n")

    # response = await agent.run(
    #     "How many spans have error?"
    # )    
    # print(str(response))
    # print ("\n\n")
    
    print("The End!")

if __name__ == "__main__":
    asyncio.run(main())
