/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.events.APIGatewayProxyRequestEvent;

import com.amazonaws.services.lambda.runtime.ClientContext;
import com.amazonaws.services.lambda.runtime.CognitoIdentity;

import com.amazonaws.services.lambda.runtime.LambdaLogger;

class TestContext implements Context {
    @Override
    public String getAwsRequestId() {
        return "fake-lambda-request-id";
    }

    @Override
    public String getLogGroupName() {
        return "fake-lambda-log-group";
    }

    @Override
    public String getLogStreamName() {
        return "fake-lambda-log-stream";
    }

    @Override
    public String getFunctionName() {
        return "fake-lambda-function-name";
    }

    @Override
    public String getFunctionVersion() {
        return "fake-lambda-version-1.0";
    }

    @Override
    public String getInvokedFunctionArn() {
        return "arn:aws:lambda:region:888888888888:function:fake-lambda";
    }

    @Override
    public CognitoIdentity getIdentity() {
        return null;
    }

    @Override
    public ClientContext getClientContext() {
        return null;
    }

    @Override
    public int getRemainingTimeInMillis() {
        return 300000;
    }

    @Override
    public int getMemoryLimitInMB() {
        return 512;
    }

    @Override
    public LambdaLogger getLogger() {
        return new LambdaLogger() {
            @Override
            public void log(String message) {
                System.out.println(message);
            }

            @Override
            public void log(byte[] message) {
                System.out.println(message);
            }
        };
    }
}

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {

        MyLambda myLambda = new MyLambda();
        com.amazonaws.services.lambda.runtime.Context context = new TestContext();
        APIGatewayProxyRequestEvent request = new APIGatewayProxyRequestEvent();

        myLambda.handleRequest(request, context);

        System.out.println(new App().getGreeting());
    }
}
