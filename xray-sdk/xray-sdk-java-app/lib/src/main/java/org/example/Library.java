/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import java.util.concurrent.TimeUnit;

import com.amazonaws.xray.AWSXRayRecorder;
import com.amazonaws.xray.AWSXRayRecorderBuilder;
import com.amazonaws.xray.emitters.Emitter;

import com.amazonaws.xray.strategy.sampling.CentralizedSamplingStrategy;
import com.amazonaws.xray.AWSXRay;

public class Library {
    // private final Tracer tracer;
    private Emitter emitter;
    private AWSXRayRecorder xrayRecorder;

    public Library() {
        // tracer = MyOTel.getInstance().getTracer();
        xrayRecorder = AWSXRayRecorderBuilder.standard()
                .withSamplingStrategy(new CentralizedSamplingStrategy())
                .withEmitter(emitter)
                .build();

        AWSXRay.setGlobalRecorder(xrayRecorder);
    }

    public String mainFunction() {
        runForever();
        doWork();
        return "Hello-XRay-Sdk.";
    }

    public void doWork() {
        xrayRecorder.beginSegment("ParentOf-Smoke-Test-Segment");
        SmokeTest smokeTest = new SmokeTest(xrayRecorder);
        smokeTest.emits();
        xrayRecorder.endSegment();

        xrayRecorder.beginSegment("ParentOf-S3-Call-Segment");
        CallS3 callS3 = new CallS3();
        callS3.call();
        xrayRecorder.endSegment();

        xrayRecorder.beginSegment("ParentOf-HTTP-Call-Segment");
        CallHttp callHttp = new CallHttp();
        callHttp.call();
        xrayRecorder.endSegment();
    }

    public void runForever() {
        while (true) {
            try {
                xrayRecorder.beginSegmentWithSampling("ParentOf-Smoke-Test-Segment");
                SmokeTest smokeTest = new SmokeTest(xrayRecorder);
                smokeTest.emits();
                xrayRecorder.endSegment();

                // doWork();

                TimeUnit.MILLISECONDS.sleep(30);
            } catch (InterruptedException e) {
                // Handle interruption
                Thread.currentThread().interrupt(); // Restore interrupt status
                break;
            }
        }
    }
}
